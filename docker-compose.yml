version: '1.20'

x-app: &default
  restart: unless-stopped
  tty: true
  environment:
    JWT_SECRET: ${JWT_SECRET}
    DB_HOST: ${DB_HOST}
    DB_PORT: ${DB_PORT}
    DB_NAME: ${DB_NAME}
    DB_USER: ${DB_USER}
    DB_PASS: ${DB_PASS}

services:

  autopartner_db:
      <<: *default
      container_name: autopartner-db
      image: postgres
      command:
        - 'postgres'
        - '-c'
        - 'max_connections=50'
        - '-c'
        - 'shared_buffers=1GB'
        - '-c'
        - 'effective_cache_size=4GB'
        - '-c'
        - 'work_mem=16MB'
        - '-c'
        - 'maintenance_work_mem=1GB'
        - '-c'
        - 'random_page_cost=1.1'
        - '-c'
        - 'temp_file_limit=10GB'
        - '-c'
        - 'log_min_duration_statement=200ms'
        - '-c'
        - 'idle_in_transaction_session_timeout=10s'
        - '-c'
        - 'lock_timeout=1s'
        - '-c'
        - 'statement_timeout=60s'
        - '-c'
        - 'shared_preload_libraries=pg_stat_statements'
        - '-c'
        - 'pg_stat_statements.max=10000'
        - '-c'
        - 'pg_stat_statements.track=all'
      environment:
        POSTGRES_DB: ${DB_NAME}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASS}
        PGDATA: '/var/lib/postgresql/data/pgdata'
      volumes:
        - pgdata:/var/lib/postgresql/data
        - ./autopartner_db/scripts:/docker-entrypoint-initdb.d
      ports:
        - '6432:5432'
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s
      restart: unless-stopped
      deploy:
        resources:
          limits:
            cpus: '1'
            memory: 4G     
      networks:
      - webnet

  autopartner_api:
    <<: *default
    container_name: autopartner-api
    build:
      context: ./autopartner-api
      dockerfile: Dockerfile   
    depends_on:
      - autopartner_db 
    volumes:
      - ./autopartner-api:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
    networks:
      - webnet

  autopartner_web:
    <<: *default
    build:
      context: ./autopartner-admin      
      target: development
      args:
        - VITE_API_URL=${API_URL}
    restart: unless-stopped 
    container_name: autopartner-admin
    tty: true
    depends_on:
      - autopartner_api
    ports:
      - '4000:4000'
    volumes:
      - ./autopartner-admin:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - webnet

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    depends_on:
      - certbot
      - autopartner_web    
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"    
    networks:
      - webnet

  certbot:
      image: certbot/certbot
      container_name: certbot
      volumes:
        - ./certbot/conf:/etc/letsencrypt
        - ./certbot/www:/var/www/certbot
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew; done;'"
      
volumes:
  pgdata:
networks:
  webnet:   
